version: 2.1
jobs:
  install:
    working_directory: ~/care
    docker:
      - image: circleci/node:10.16.3
    steps:
      - add_ssh_keys:
          fingerprints:
            - "7b:31:e5:d0:a8:97:2a:e1:b5:09:07:6f:77:6f:e5:72"
      - checkout
      - run:
          name: update-npm
          command: 'sudo npm install -g npm@latest'
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: install-npm-wee
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
  build:
    working_directory: ~/care
    docker:
      - image: circleci/node:10.16.3
    steps:
      - run: echo "Building"
      - run: 
          name: build
          command: npm run build
  deploy:
    working_directory: ~/care
    docker:
      - image: circleci/node:10.16.3
    steps:
      - run: echo "Deploying"
      - run:
          name: Deploy
          command: |
            
            ssh-keyscan -H 34.93.26.100 >> ~/.ssh/known_hosts
            sudo apt-get update && sudo apt-get install rsync -y

            echo "The branch is: $CIRCLE_BRANCH"
            if [[ $CIRCLE_BRANCH = "master" ]]
            then
              echo "Syncing to production"
              rsync -avz --delete dist/ netlify@34.93.26.100:/opt/care_prod/
            elif [[ $CIRCLE_BRANCH = "develop" ]]
            then
              echo "Syncing to dev"
              rsync -avz --delete dist/ netlify@34.93.26.100:/opt/care/
            else
              echo "Not Syncing the branch $CIRCLE_BRANCH"
            fi

            # tar -czf build.tar.gz dist/
            # scp build.tar.gz netlify@34.93.26.100:/home/netlify/releases/
            # ssh netlify@34.93.26.100 "cd /home/netlify/releases/; tar xf build.tar.gz; cp -rf /opt/care_fe/dist /opt/care_fe/dist.old; mv dist /opt/care_fe/dist"

workflows:
  version: 2
  care:
    jobs:
      - install
      - build:
          requires:
            - install
      - hold:
          type: approval
          requires:
            - build
      - deploy:
          requires:
            - hold
